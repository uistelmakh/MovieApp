//
//  MoviesPresenter.swift
//  MoviesApp
//
//  Created by Sergey Stelmakh on 09.11.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

/// Логика презентации
protocol MoviesPresentationLogic {
    /// Ошибка от сервера
    /// - Parameter text: Текст ошибки
    func showErrorMessage(text: String)
    
    /// Данные успешно загружены
    /// - Parameters:
    ///   - trends: тренды
    ///   - tvPopulars: популярные сериалы
    ///   - nowPlayings: сейчас в кино
    func loadDataSuccess(trends: [Trend], tvPopulars: [TvPopular], nowPlayings: [NowPlaying])
    
    /// Успешная подгрузка доп страницы трендов
    /// - Parameter trends: тренды
    func loadMoreTrendsSuccess(trends: [Trend])
    
    /// Успешная подгрузка доп страницы трендов в кино
    /// - Parameter nowPlaying: сейчас в кино
    func loadMoreNowPlayingSuccess(nowPlaying: [NowPlaying])
    
    /// Успешная подгрузка доп страницы популярных сериалов на тв
    /// - Parameter tvPopular: сериал
    func loadMoreTvPopularSuccess(tvPopular: [TvPopular])
}

/// Протокол для работы MoviesPresenter из MoviesViewController
protocol MoviesViewControllerOutput {
    /// Загрузка данных
    func loadData()
    
    /// Подгрузка доп страницы трендов
    func loadMoreTrends()
    
    /// Подгрузка доп страницы трендов в кино
    func loadMoreNowPlaying()
    
    /// Подгрузка доп страницы популярных сериалов на тв
    func loadMoreTvPopular()
}

/// Презентер VIPER-модуля Фильмов
final class MoviesPresenter {
    weak var viewController: MoviesDisplayLogic?
    var interactor: MoviesBusinessLogic?
    var router: MoviesRoutingLogic?
}

// MARK: - MoviesPresentationLogic
extension MoviesPresenter: MoviesPresentationLogic {
    func loadDataSuccess(trends: [Trend], tvPopulars: [TvPopular], nowPlayings: [NowPlaying]) {
        viewController?.loadDataDone(trends: trends, tvPopulars: tvPopulars, nowPlayings: nowPlayings)
        
        DispatchQueue.main.async { [weak self] in
            self?.viewController?.reloadRows()
        }
    }
    
    func showErrorMessage(text: String) {
        
    }
    
    func loadMoreTrendsSuccess(trends: [Trend]) {
        viewController?.trends.append(contentsOf: trends)
        DispatchQueue.main.async { [weak self] in
            self?.viewController?.reloadTrends()
        }
    }
    
    func loadMoreNowPlayingSuccess(nowPlaying: [NowPlaying]) {
        print(nowPlaying)
        viewController?.nowPlaying.append(contentsOf: nowPlaying)
        DispatchQueue.main.async {
            self.viewController?.reloadNowPlaying()
        }
    }
    
    func loadMoreTvPopularSuccess(tvPopular: [TvPopular]) {
        viewController?.tvPopulars.append(contentsOf: tvPopular)
        DispatchQueue.main.async {
            self.viewController?.reloadTvPopular()
        }
    }
}

// MARK: - MoviesViewControllerOutput
extension MoviesPresenter: MoviesViewControllerOutput {
    func loadData() {
        interactor?.retrieveData()
    }
    
    func loadMoreNowPlaying() {
        interactor?.retrieveMoreNowPlaying()
    }
    
    func loadMoreTrends() {
        interactor?.retrieveMoreTrends()
    }
    
    func loadMoreTvPopular() {
        interactor?.retrieveMoreTvPopular()
    }
}
