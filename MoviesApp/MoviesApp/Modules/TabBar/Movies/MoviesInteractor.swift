//
//  MoviesInteractor.swift
//  MoviesApp
//
//  Created by Sergey Stelmakh on 09.11.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MoviesBusinessLogic {
    /// Получаем данные
    func retrieveData()
}

final class MoviesInteractor {
    var presenter: MoviesPresentationLogic?
    
    private var service: NetworkServiceProtocol = APIRequest.shared
    
    private var trendsPage: Int = 1
    private var trendsTotalPages: Int = 1
    
    
    
    
}

// MARK: - MoviesBusinessLogic
extension MoviesInteractor: MoviesBusinessLogic {
    func retrieveData() {
        
        var trends = [Trend]()
        var trendsTotalPages = 0
        
        let dispatchGroup = DispatchGroup()
        
        service.getTrending(page: trendsPage) { trendsResponse in
            switch trendsResponse {
            case .success(let data):
                //trendsTotalPages = data.totalPages
                trends = data.results
            case .failure(let error):
                self.presenter?.showErrorMessage(text: error.message)
            }
        }
        
        dispatchGroup.notify(queue: .main) { [weak self] in
            self?.presenter?.loadDataSuccess(trends: trends)
        }
    }
}
