//
//  SearchSettingsViewController.swift
//  MoviesApp
//
//  Created by Sergey Stelmakh on 31.01.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

/// Протокол отображения SearchSettingsViewController-а
protocol SearchSettingsDisplayLogic: AnyObject {
  
}

/// Экран настроек поиска фильмов
final class SearchSettingsViewController: UIViewController{
    /// Ссылка на слой презентации
    var presenter: SearchSettingsViewControllerOutput?
    
    private let tableView: UITableView = {
        let tableView = UITableView()
        tableView.translatesAutoresizingMaskIntoConstraints = false
        tableView.showsVerticalScrollIndicator = false
        tableView.register(UITableViewCell.self, forCellReuseIdentifier: "cell")
        return tableView
    }()
    
    private let adultSwitch = UISwitch()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setup()
        setupConstrains()
    }
}

// MARK: - Setup
extension SearchSettingsViewController {
    func setup() {
        view.backgroundColor = .white
        
        view.addSubview(tableView)
        tableView.delegate = self
        tableView.dataSource = self
        
        adultSwitch.isOn = presenter?.getAdultFilter() ?? false
        adultSwitch.addTarget(self, action: #selector(adultSwitchTriggered), for: .valueChanged)
    }
    
    @objc func adultSwitchTriggered(sender: UISwitch) {
        presenter?.setAdultFilter(sender.isOn)
    }
}

// MARK: - setupConstrains
extension SearchSettingsViewController {
    func setupConstrains() {
        NSLayoutConstraint.activate([
            tableView.topAnchor.constraint(equalTo: view.topAnchor),
            tableView.bottomAnchor.constraint(equalTo: view.bottomAnchor),
            tableView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            tableView.trailingAnchor.constraint(equalTo: view.trailingAnchor)
        ])
    }
}

// MARK: - UITableViewDataSource
extension SearchSettingsViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
        cell.textLabel?.text = "Показывать фильмы 18+? "
        cell.accessoryView = adultSwitch
        cell.preservesSuperviewLayoutMargins = false
        cell.separatorInset = .zero
        cell.layoutMargins = .zero
        return cell
    }
}

// MARK: - UITableViewDelegate
extension SearchSettingsViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
    }
}

// MARK: - SearchSettingsDisplayLogic
extension SearchSettingsViewController: SearchSettingsDisplayLogic {
    
}
